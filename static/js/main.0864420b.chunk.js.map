{"version":3,"sources":["App.module.css","assets/favicon.ico","assets/signature.svg","assets/medusa.svg","assets/paper.png","components/Contact/Contact.module.css","components/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","background","paper","portrait","signature","minimize","__webpack_require__","p","Contact","email","contact","react_default","a","createElement","className","classes","href","target","rel","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","event","setState","scrollPosition","window","scrollY","state","addEventListener","removeEventListener","height","push","Fragment","Helmet_default","title","meta","name","content","link","type","concat","favicon","onScroll","src","alt","medusa","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0864420b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2wTw2\",\"background\":\"App_background__3d-n9\",\"paper\":\"App_paper__o_tPT\",\"portrait\":\"App_portrait__2UkLU\",\"signature\":\"App_signature__2tBW1\",\"minimize\":\"App_minimize__23V4V\"};","module.exports = __webpack_public_path__ + \"static/media/favicon.af75994a.ico\";","module.exports = __webpack_public_path__ + \"static/media/signature.d9767e10.svg\";","module.exports = __webpack_public_path__ + \"static/media/medusa.3aacb3bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/paper.c18c712b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__8gAx3\",\"email\":\"Contact_email__3Ed_A\"};","import React from 'react';\nimport classes from './Contact.module.css';\n\nconst contact = () => (\n  <div className={classes.Contact}>\n    <p></p>\n    <p><span>Liana Birke</span></p>\n    <p><span>Front-end Web Developer</span></p>\n    <p><span className={classes.email}>liana.birke@gmail.com</span></p>\n    <p><span>View my </span><a href=\"//www.linkedin.com/in/liana-birke-997328ba/\" target=\"_blank\" rel=\"noopener noreferrer\">resume</a></p>\n    <p><a href=\"//github.com/itsliana/itsliana.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About</a><span> this site</span></p>\n    <p><span>View my </span><a href=\"//github.com/itsliana/german-this\" target=\"_blank\" rel=\"noopener noreferrer\">last project</a></p>\n    <p><span>It's about a </span><a href=\"//www.instagram.com/bull.child/\" target=\"_blank\" rel=\"noopener noreferrer\">mood</a></p>\n  </div>\n)\n\nexport default contact;","import React, { Component } from 'react';\n\nimport classes from './App.module.css';\n\nimport Helmet from 'react-helmet';\nimport favicon from './assets/favicon.ico';\nimport Contact from './components/Contact/Contact';\nimport signature from './assets/signature.svg';\nimport medusa from './assets/medusa.svg';\nimport paper from './assets/paper.png';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      scrollPosition: null\n    }\n  }\n  \n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  };\n  \n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  };\n  \n  handleScroll = (event) => {\n    this.setState({ scrollPosition: window.scrollY})\n\n  };\n\n  render() {\n    const shrinkOn = 10;\n    let height = [];\n    if (this.state.scrollPosition > shrinkOn) {\n      height.push(classes.minimize)\n    }\n\n    return (\n      <React.Fragment>\n        <Helmet\n          title='Liana Birke | Web Developer'\n          meta={[\n            { name: 'description', content: 'Hi, I\\'m Liana Birke. I\\'m a Front-End Web Developer based in the East Coast. I do art on rare occasions.' },\n            { name: 'keywords', content: 'front-end, web, development, developer, frontend, front-end web developer, web developer, frontend web developer, freelance, graphic, design' },\n          ]}\n          link={[\n            { rel: 'shortcut icon', type: 'image/ico', href: `${favicon}` }\n          ]}\n        />\n        <div onScroll={this.handleScroll} className={classes.container}>\n          <div className={classes.background}></div>\n          <div className={classes.paper}><img src={paper} alt=\"paper\"></img></div>\n          <div className={classes.portrait}><img src={medusa} alt=\"medusa being choked by her own hair\"></img></div>\n          <div className={classes.signature}><img className={height} src={signature} alt=\"Liana's signature\"></img></div>\n          <Contact />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}